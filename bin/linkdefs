#!/usr/bin/perl

# Produces an intermediate markdown file from the markdown source with
# defined terms in the text linked to entries in the glossary.  (The
# intermediate file is ugly, don't edit it, just pass it to the next
# process in the pipeline.)
#
# A defined term in the source looks like this:
#
#    [Defined term](#def)
#    [defined term](#def)
#
# In the intermediate form, it looks like this:
#
#    <span class="termRef"><a name="def-defined-term">Defined term </a></span>
#    <span class="termRef"><a name="def-defined-term">defined term </a></span>
#
# Isn't that ugly? Yes, it is.
#
# The source document is always structured so that the glossary comes before
# the first defined term in the text. A definition in the source looks
# like this:
#
#    [Defined term|Definition|
#
# In the intermediate form, it looks like this
#
#    |<a href="def-defined-term></a>Defined term|Definition|

use warnings;
use strict;

my $line = 0;
my %terms;

while (<>) {
  $line++;
  print;
  last if m/^#+ .*Glossary/;
}
while (<>) {
  $line++;
  print;
  last if m/^\|\s*[:-]+\s*\|\s*[:-]+\s*\|/;
}
while (<>) {
  $line++;
  print if /^#/;
  last  if /^#/;
  print if /^\s*$/;
  next if /^\s*$/;
  print STDERR "bad glossary format at line $line\n"
      unless  m/^\|([^|]*)\|([^|]*)\|/;
  my $def  = $2;
  my $term = lc $1;
  my $href = lc $1;
  $href =~ s/ +/-/g;
  $href = "def-$href";
  printf "| <a name=\"%s\"></a>%s | %s |\n", $href, $term, $def;
  $terms{$term} = $href;
}

while (<>) {
  $line++;
  
  while (m/\[([^]]+)\]\(#def\)/g) {
    my $si    = $-[0];
    my $ei    = $+[0];
    my $mlen  = $ei - $si;
    my $ttxt  = $1;
    my $term  = lc $1;
    $term =~ s/[^\s\w]//g;    # remove everything but spaces and word chars

    my $href = $terms{$term};
    if (!defined $href) {
      $term =~ s/s$//;        # can't find "documents"? try "document"
      $href = $terms{$term};
    }
    if (defined $href) {
      my $rep = "[<span class=\"termRef\">$ttxt</span>](#$href)";
      substr($_, $si, $mlen) = $rep;
    }
    else {
      printf STDERR "no definition for %s at line %d\n", $term, $line;
    }
  }
  print;
}
